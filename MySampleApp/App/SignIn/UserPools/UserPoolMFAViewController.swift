//
//  UserPoolMFAViewController.swift
//  MySampleApp
//
//
// Copyright 2016 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.5
//
//

import Foundation
import AWSMobileHubHelper
import AWSCognitoIdentityProvider

class UserPoolMFAViewController: UIViewController {
    
    var destination: String?
    var mfaCodeCompletionSource: AWSTaskCompletionSource?
    
    @IBOutlet weak var codeSentTo: UILabel!
    @IBOutlet weak var authenticationCode: UITextField!
    
    override func viewWillAppear(animated: Bool) {
        super.viewWillAppear(animated)
        self.codeSentTo.text = self.destination
        self.authenticationCode.text = nil
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // perform any action, if required, once the view is loaded
    }
    
    @IBAction func onSignIn(sender: AnyObject) {
        // check if the user is not providing an empty authentication code 
        guard let authenticationCodeValue = self.authenticationCode.text where !authenticationCodeValue.isEmpty else {
            UIAlertView(title: "Authentication Code Missing",
                        message: "Please enter the authentication code you received by E-mail / SMS.",
                        delegate: nil,
                        cancelButtonTitle: "Ok").show()
            return
        }
        self.mfaCodeCompletionSource?.setResult(authenticationCodeValue)
    }
    
    @IBAction func onCancel(sender: AnyObject) {
        self.presentingViewController?.dismissViewControllerAnimated(true, completion: nil)
    }
}

extension UserPoolMFAViewController : AWSCognitoIdentityMultiFactorAuthentication {
    
    func didCompleteMultifactorAuthenticationStepWithError(error: NSError?) {
        if let error = error {
            dispatch_async(dispatch_get_main_queue(), {
                UIAlertView(title: error.userInfo["__type"] as? String,
                    message: error.userInfo["message"] as? String,
                    delegate: nil,
                    cancelButtonTitle: nil).show()
            })
        }
    }
    
    func getMultiFactorAuthenticationCode(authenticationInput: AWSCognitoIdentityMultifactorAuthenticationInput, mfaCodeCompletionSource: AWSTaskCompletionSource) {
        self.mfaCodeCompletionSource = mfaCodeCompletionSource
        self.destination = authenticationInput.destination
    }
    
}
