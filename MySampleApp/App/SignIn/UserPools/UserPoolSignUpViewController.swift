//
//  UserPoolSignUpViewController.swift
//  MySampleApp
//
//
// Copyright 2016 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.5
//
//

import Foundation
import UIKit
import AWSMobileHubHelper
import AWSCognitoIdentityProvider

class UserPoolSignUpViewController: UIViewController {
    
    var pool: AWSCognitoIdentityUserPool?
    var sentTo: String?
    
    @IBOutlet weak var userName: UITextField!
    @IBOutlet weak var password: UITextField!
    
    @IBOutlet weak var phone: UITextField!
    @IBOutlet weak var email: UITextField!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.pool = AWSCognitoIdentityUserPool.init(forKey: AWSCognitoUserPoolsSignInProviderKey)
    }
    
    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
        if let signUpConfirmationViewController = segue.destinationViewController as? UserPoolSignUpConfirmationViewController {
            signUpConfirmationViewController.sentTo = self.sentTo
            signUpConfirmationViewController.user = self.pool?.getUser(self.userName.text!)
        }
    }
    
    @IBAction func onSignUp(sender: AnyObject) {

        guard let userNameValue = self.userName.text where !userNameValue.isEmpty,
            let passwordValue = self.password.text where !passwordValue.isEmpty else {
            UIAlertView(title: "Missing Required Fields",
                        message: "Username / Password are required for registration.",
                        delegate: nil,
                        cancelButtonTitle: "Ok").show()
            return
        }
        
        var attributes = [AWSCognitoIdentityUserAttributeType]()
        
        if let phoneValue = self.phone.text where !phoneValue.isEmpty {
            let phone = AWSCognitoIdentityUserAttributeType()
            phone.name = "phone_number"
            phone.value = phoneValue
            attributes.append(phone)
        }
        
        if let emailValue = self.email.text where !emailValue.isEmpty {
            let email = AWSCognitoIdentityUserAttributeType()
            email.name = "email"
            email.value = emailValue
            attributes.append(email)
        }
        
        //sign up the user
        self.pool?.signUp(userNameValue, password: passwordValue, userAttributes: attributes, validationData: nil).continueWithBlock {[weak self] (task: AWSTask) -> AnyObject? in
            guard let strongSelf = self else { return nil }
            dispatch_async(dispatch_get_main_queue(), { 
                if let error = task.error {
                    UIAlertView(title: error.userInfo["__type"] as? String,
                        message: error.userInfo["message"] as? String,
                        delegate: nil,
                        cancelButtonTitle: "Ok").show()
                } else if let result = task.result as? AWSCognitoIdentityUserPoolSignUpResponse  {
                    // handle the case where user has to confirm his identity via email / SMS
                    if (result.user.confirmedStatus != AWSCognitoIdentityUserStatus.Confirmed) {
                        strongSelf.sentTo = result.codeDeliveryDetails?.destination
                        strongSelf.performSegueWithIdentifier("SignUpConfirmSegue", sender:sender)
                    } else {
                    UIAlertView(title: "Registration Complete",
                        message: "Registration was successful.",
                        delegate: nil,
                        cancelButtonTitle: "Ok").show()
                    strongSelf.presentingViewController?.dismissViewControllerAnimated(true, completion: nil)
                }
                }
                
            })
            return nil
        }
    }

    @IBAction func onCancel(sender: AnyObject) {
        self.presentingViewController?.dismissViewControllerAnimated(true, completion: nil)
    }
}
